(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{188:function(t,a,r){"use strict";r.r(a);var s=r(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"mysql事务隔离级别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql事务隔离级别","aria-hidden":"true"}},[t._v("#")]),t._v(" mysql事务隔离级别")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#事务的隔离性以及隔离级别"}},[t._v("事务的隔离性以及隔离级别")])]),r("li",[r("a",{attrs:{href:"#事务隔离实现方式"}},[t._v("事务隔离实现方式")])]),r("li",[r("a",{attrs:{href:"#事务启动方式"}},[t._v("事务启动方式")])]),r("li",[r("a",{attrs:{href:"#mvcc工作原理"}},[t._v("mvcc工作原理")])]),r("li",[r("a",{attrs:{href:"#更新逻辑-当前读"}},[t._v("更新逻辑(当前读)")])])])]),r("p"),t._v(" "),r("h2",{attrs:{id:"事务的隔离性以及隔离级别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离性以及隔离级别","aria-hidden":"true"}},[t._v("#")]),t._v(" 事务的隔离性以及隔离级别")]),t._v(" "),r("p",[r("strong",[t._v("读未提交")]),t._v("：一个事务尚未提交，它做的变更其他事务可以看到"),r("br"),t._v(" "),r("strong",[t._v("读提交")]),t._v("：一个事务提交以后，其他事务才可以看到"),r("br"),t._v(" "),r("strong",[t._v("可重复读")]),t._v("：一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的"),r("br"),t._v(" "),r("strong",[t._v("串行化")]),t._v("：对于同一行记录，读写都会加锁，当出现读写锁冲突的时候，后面的事务必须要等待前面的事务完成以后才能执行"),r("br")]),t._v(" "),r("h2",{attrs:{id:"事务隔离实现方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离实现方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 事务隔离实现方式")]),t._v(" "),r("p",[t._v("  读可提交与可重复读的事务隔离级别都是基于数据库的视图来实现的，以访问时的视图逻辑结果为准。可重复读是事务启动时创建，整个事务存在期间均使用该视图。\n读可提交是每个SQL语句在执行时创建。"),r("br")]),t._v(" "),r("p",[t._v("  读未提交直接返回记录上的最新值，没有视图概念;串行化直接采用加锁的方式来避免并行访问。")]),t._v(" "),r("h2",{attrs:{id:"事务启动方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事务启动方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 事务启动方式")]),t._v(" "),r("ul",[r("li",[t._v("显示启动事务：使用begin或者使用start transaction。(提交使用commit，回滚使用rollback)。")]),t._v(" "),r("li",[t._v("set autocommit = 1, 使用begin显示启动事务")])]),t._v(" "),r("h2",{attrs:{id:"mvcc工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mvcc工作原理","aria-hidden":"true"}},[t._v("#")]),t._v(" mvcc工作原理")]),t._v(" "),r("h2",{attrs:{id:"更新逻辑-当前读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更新逻辑-当前读","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新逻辑(当前读)")]),t._v(" "),r("p",[t._v("  mysql更新之前会去查询数据库，这个操作称为当前读。")]),t._v(" "),r("p",[t._v("看到mysql45讲-15")])])}],!1,null,null,null);e.options.__file="README.md";a.default=e.exports}}]);