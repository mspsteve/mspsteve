(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{191:function(a,t,r){"use strict";r.r(t);var s=r(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"mysql查询过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql查询过程","aria-hidden":"true"}},[a._v("#")]),a._v(" mysql查询过程")]),a._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#mysql基础结构"}},[a._v("mysql基础结构")]),r("ul",[r("li",[r("a",{attrs:{href:"#server层"}},[a._v("server层")])]),r("li",[r("a",{attrs:{href:"#存储引擎"}},[a._v("存储引擎")])])])]),r("li",[r("a",{attrs:{href:"#详细介绍"}},[a._v("详细介绍")]),r("ul",[r("li",[r("a",{attrs:{href:"#连接器"}},[a._v("连接器")])]),r("li",[r("a",{attrs:{href:"#查询缓存"}},[a._v("查询缓存")])]),r("li",[r("a",{attrs:{href:"#分析器"}},[a._v("分析器")])]),r("li",[r("a",{attrs:{href:"#优化器"}},[a._v("优化器")])]),r("li",[r("a",{attrs:{href:"#执行器"}},[a._v("执行器")])])])])])]),r("p"),a._v(" "),r("h2",{attrs:{id:"mysql基础结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql基础结构","aria-hidden":"true"}},[a._v("#")]),a._v(" mysql基础结构")]),a._v(" "),r("h3",{attrs:{id:"server层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#server层","aria-hidden":"true"}},[a._v("#")]),a._v(" server层")]),a._v(" "),r("p",[a._v("  包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），\n所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等")]),a._v(" "),r("h3",{attrs:{id:"存储引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎","aria-hidden":"true"}},[a._v("#")]),a._v(" 存储引擎")]),a._v(" "),r("p",[a._v("  负责数据的存储和提取。其架构模式是插件式的。支持 InnoDB、MyISAM、Memory 等多个存储引擎。\n现在最常用的存储引擎是 InnoDB，MySQL 5.5.5 版本开始InnoDB也成为了默认存储引擎。")]),a._v(" "),r("h2",{attrs:{id:"详细介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#详细介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" 详细介绍")]),a._v(" "),r("h3",{attrs:{id:"连接器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#连接器","aria-hidden":"true"}},[a._v("#")]),a._v(" 连接器")]),a._v(" "),r("p",[a._v("  连接器负责跟客户端建立连接、获取权限、维持和管理连接，使用如下命令创建连接后，如果长时间没有请求进来，则连接器会自动断开，控制参数为wait_timeout控制，\n默认时间为8小时(设置连接池时间时需要考虑，避免从连接池拿到的链接为无效链接)。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("mysql -h$ip -P$port -u$user -p\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br")])]),r("p",[a._v("  建立连接比较耗时，要尽可能地减少建立连接的操作，尽量使用长连接。如果全部使用长连接，会导致mysql占用内存上涨快(连接对象冗余大量其他对象)，一直不断开会导致\n内存被干爆导致OOM(mysql重启)，解决方案有两种方式：")]),a._v(" "),r("ul",[r("li",[a._v("定期断开长连接。")]),a._v(" "),r("li",[a._v("mysql版本，每次执行比较大的操作，使用mysql_reset_connection来初始化连接资源。")])]),a._v(" "),r("h3",{attrs:{id:"查询缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查询缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 查询缓存")]),a._v(" "),r("p",[a._v("  查询语句首先回去内存去查询缓存(上一次查询结果以key-value方式存储，key为语句，value为查询结果)，实际操作性比较差，每次更新都会去清除查询缓存(mysql 8.0没有此功能)。")]),a._v(" "),r("h3",{attrs:{id:"分析器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分析器","aria-hidden":"true"}},[a._v("#")]),a._v(" 分析器")]),a._v(" "),r("p",[a._v("  词法分析(识别关键字)->语法分析(判断是否满足sql规范)")]),a._v(" "),r("h3",{attrs:{id:"优化器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优化器","aria-hidden":"true"}},[a._v("#")]),a._v(" 优化器")]),a._v(" "),r("ul",[r("li",[a._v("选择索引")]),a._v(" "),r("li",[a._v("多表级联查询时，决定每个表的连接顺序。")])]),a._v(" "),r("h3",{attrs:{id:"执行器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#执行器","aria-hidden":"true"}},[a._v("#")]),a._v(" 执行器")]),a._v(" "),r("ul",[r("li",[a._v("校验是否有权限操作该表")]),a._v(" "),r("li",[a._v("调用存储引擎接口取表的第一个，然后调用存储引擎的下一行，执行判断逻辑")]),a._v(" "),r("li",[a._v("将满足条件的行组织成记录集作为结果集返回")])])])}],!1,null,null,null);e.options.__file="README.md";t.default=e.exports}}]);