(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{190:function(r,t,e){"use strict";e.r(t);var a=e(0),o=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var r=this,t=r.$createElement,e=r._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"mysql更新操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql更新操作","aria-hidden":"true"}},[r._v("#")]),r._v(" mysql更新操作")]),r._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#redo-log"}},[r._v("redo log")])]),e("li",[e("a",{attrs:{href:"#binlog"}},[r._v("binlog")])]),e("li",[e("a",{attrs:{href:"#更新操作过程"}},[r._v("更新操作过程")])]),e("li",[e("a",{attrs:{href:"#两阶段提交"}},[r._v("两阶段提交")])])])]),e("p"),r._v(" "),e("h2",{attrs:{id:"redo-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redo-log","aria-hidden":"true"}},[r._v("#")]),r._v(" redo log")]),r._v(" "),e("p",[r._v('  redo log日志位于innodb引擎层，为一组固定大小的文件，循环写入，写完以后会把更新记录更新到数据文件中，这样可以确保数据库异常重启后，之前提交的记录不会丢失。\n这种能力被称作crash-safe。redo log是物理日志，记录是"某个数据页上的做了什么修改"，写记录为循环写。')]),r._v(" "),e("h2",{attrs:{id:"binlog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#binlog","aria-hidden":"true"}},[r._v("#")]),r._v(" binlog")]),r._v(" "),e("p",[r._v('  binlog位于mysql server层，为逻辑日志，记录的是sql语句的原始逻辑，比如"字段的加减操作"，binlog为追加操作，写满一个日志文件会切换到下一个文件接着写。')]),r._v(" "),e("h2",{attrs:{id:"更新操作过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新操作过程","aria-hidden":"true"}},[r._v("#")]),r._v(" 更新操作过程")]),r._v(" "),e("p",[r._v("   执行器 -> innodb 引擎查找数据 -> 执行更新操作 -> 调用innodb引擎更新数据到内存，更新记录到redo log ->执行器生成binlog,将binlog日志写入磁盘->执行器调用引擎的提交事务接口，\n引擎将写入的redo log修改为提交(commit)状态。"),e("br"),r._v("\n   其中，写入redo log拆分成两个部分，prepare阶段和commit阶段，就是两阶段提交阶段。")]),r._v(" "),e("h2",{attrs:{id:"两阶段提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两阶段提交","aria-hidden":"true"}},[r._v("#")]),r._v(" 两阶段提交")]),r._v(" "),e("p",[r._v("  先写redo log后写binlog 失败，只会多一步redo binlog的uncommited数据，少1次更新操作，不会导致数据不一致情况。"),e("br"),r._v("\n  先写binlog后写redo log，会导致binlog写成功，但是redo log写失败，基于binlog日志恢复就会导致数据不一致。")])])}],!1,null,null,null);o.options.__file="README.md";t.default=o.exports}}]);