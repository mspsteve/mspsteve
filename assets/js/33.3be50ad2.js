(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{195:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"jvm方法句柄"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm方法句柄","aria-hidden":"true"}},[t._v("#")]),t._v(" jvm方法句柄")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#基本概念"}},[t._v("基本概念")])]),a("li",[a("a",{attrs:{href:"#使用"}},[t._v("使用")])]),a("li",[a("a",{attrs:{href:"#实现原理"}},[t._v("实现原理")])]),a("li",[a("a",{attrs:{href:"#与反射区别"}},[t._v("与反射区别")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v("  方法句柄是一个强类型的，能够被直接执行的引用。该引用可以指向常规的静态方法、实例方法、构造器或者字段。\n方法句柄的类型（"),a("code",[t._v("MethodType")]),t._v("）是由所指向方法的参数类型以及返回类型组成的,是确定方法句柄是否适配的唯一关键。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("当指向字段时，方法句柄实则指向包含字段访问字节码的虚构方法，语义上等价于目标字段的"),a("code",[t._v("getter")]),t._v("或者"),a("code",[t._v("setter")]),t._v("方法。\n这里需要注意的是，它并不会直接指向目标字段所在类的"),a("code",[t._v("getter/setter")]),t._v("，毕竟无法保证已有的"),a("code",[t._v("getter/setter")]),t._v("方法就是在访问目标字段。")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("MethodHandleTest")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" String "),a("span",{attrs:{class:"token function"}},[t._v("bar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" MethodHandles"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Lookup "),a("span",{attrs:{class:"token function"}},[t._v("lookup")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" MethodHandles"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("lookup")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Throwable "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("//具备MethodHandleTest类的访问权限")]),t._v("\n        MethodHandles"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Lookup l "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MethodHandleTest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("lookup")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("//反射方式")]),t._v("\n        Method m "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MethodHandleTest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getDeclaredMethod")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"bar"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        MethodHandle mh0 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" l"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("unreflect")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 利用findstatic")]),t._v("\n        MethodType t "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" MethodType"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("methodType")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        MethodHandle mh1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" l"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("findStatic")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MethodHandleTest"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"bar"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("// 使用")]),t._v("\n        String v1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" mh0"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("invokeExact")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"maoshiping"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        String v2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" mh0"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("invokeExact")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"maoshiping"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("p",[t._v("  方法句柄的创建是通过"),a("code",[t._v("MethodHandles.Lookup")]),t._v("类来完成。方法句柄的获取：")]),t._v(" "),a("ul",[a("li",[t._v("使用反射API的Method来查找")]),t._v(" "),a("li",[t._v("根据类、方法名以及方法句柄来查找")])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("invokestatic")]),t._v("调用的静态方法，需要使用"),a("code",[t._v("Lookup.findStatic")]),t._v("方法"),a("br"),t._v("\n使用"),a("code",[t._v("invokevirtual")]),t._v("调用的实例方法以及"),a("code",[t._v("invokeinterface")]),t._v("调用的接口方法，需要使用"),a("code",[t._v("findVirtual")]),t._v("方法"),a("br"),t._v("\n使用"),a("code",[t._v("invokespecial")]),t._v("调用的实例方法，需要使用"),a("code",[t._v("findSpecial")]),t._v("方法"),a("br")])]),t._v(" "),a("p",[t._v("  调用方法句柄，和原本对应的调用指令是一致的。也就是说，对于原本用"),a("code",[t._v("invokevirtual")]),t._v("调用的方法句柄，它也会采用动态绑定；\n而对于原本用"),a("code",[t._v("invokespecial")]),t._v("调用的方法句柄，它会采用静态绑定。")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("  方法句柄提供调用以及增删改等操作，具体如下：")]),t._v(" "),a("ul",[a("li",[t._v("invokeExact方法要求严格类型匹配(包括传参和返回值)，只要类型不能匹配就会报错")]),t._v(" "),a("li",[t._v("invoke参数类型松散匹配，通过"),a("code",[t._v("asType")]),t._v("自动适配")]),t._v(" "),a("li",[t._v("MethodHandle.asType方法来修改传参")]),t._v(" "),a("li",[t._v("MethodHandles.dropArguments方法来删除部分传入的参数，再调用另一个方法句柄")]),t._v(" "),a("li",[t._v("MethodHandle.bindTo方法在传参中插入额外的参数，再调用另外一个方法句柄")])]),t._v(" "),a("h2",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("p",[t._v("看不懂，没有彻底整明白，有时间再研究")]),t._v(" "),a("h2",{attrs:{id:"与反射区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与反射区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 与反射区别")]),t._v(" "),a("ul",[a("li",[t._v("Reflection是在模拟java代码层次的方法调用，而MethodHandle是在模拟字节码层次的方法调用")]),t._v(" "),a("li",[t._v("信息上讲，Reflection是重量级，而MethodHandle是轻量级")])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Reflection包含了方法的签名、描述符以及方法属性表中各种属性的java端表示方式，还包含有执行权限等的运行期信息。"),a("br"),t._v("\nMethodHandle仅仅包含着与执行该方法相关的信息。")])]),t._v(" "),a("ul",[a("li",[t._v("MethodHandle可以实现字节码级别的各种优化(方法内联)，Reflection去调用方法则不行")]),t._v(" "),a("li",[t._v("MethodHandle字节码层面的实现，也可以支持其他语言，Reflection则不可以")])])])}],!1,null,null,null);e.options.__file="jvm方法句柄.md";s.default=e.exports}}]);