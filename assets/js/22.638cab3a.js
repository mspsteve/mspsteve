(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{217:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function","aria-hidden":"true"}},[t._v("#")]),t._v(" function")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#consumer系列"}},[t._v("consumer系列")])]),a("li",[a("a",{attrs:{href:"#predicate系列"}},[t._v("predicate系列")])]),a("li",[a("a",{attrs:{href:"#function系列"}},[t._v("function系列")])]),a("li",[a("a",{attrs:{href:"#supplier系列"}},[t._v("Supplier系列")])]),a("li",[a("a",{attrs:{href:"#其他方法理解"}},[t._v("其他方法理解")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"consumer系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumer系列","aria-hidden":"true"}},[t._v("#")]),t._v(" consumer系列")]),t._v(" "),a("ul",[a("li",[t._v("即接口表示一个接受单个输入参数并且没有返回值的操作。Consumer接口期望执行带有副作用的操作(Consumer的操作可能会更改输入参数的内部状态)")]),t._v(" "),a("li",[t._v("使用方式：")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    User user "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("User")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"zm"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Consumer"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("User"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" userConsumer "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" User1 "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" User1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("setName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"zmChange"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//接受一个参数")]),t._v("\n    userConsumer"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("accept")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("其他类型：BiConsumer、DoubleConsumer、IntConsumer、LongConsumer、ObjDoubleConsumer")])]),t._v(" "),a("h2",{attrs:{id:"predicate系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#predicate系列","aria-hidden":"true"}},[t._v("#")]),t._v(" predicate系列")]),t._v(" "),a("ul",[a("li",[t._v("Predicate功能判断输入的对象是否符合某个条件，传参为T")]),t._v(" "),a("li",[t._v("使用方式")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("Predicate"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Integer"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" boolValue "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("；其中，x为变量，x "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("为test函数体内容\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("BiPredicate 实现test(T t, U u), 两个参数")]),t._v(" "),a("li",[t._v("DoublePredicate、IntPredicate、LongPredicate")])]),t._v(" "),a("h2",{attrs:{id:"function系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function系列","aria-hidden":"true"}},[t._v("#")]),t._v(" function系列")]),t._v(" "),a("ul",[a("li",[t._v("将Function对象应用到输入的参数上，然后返回计算结果")]),t._v(" "),a("li",[t._v("使用方式")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("validInput")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputStr "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" inputStr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("isEmpty")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"名字不能为空"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v("inputStr"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" String "),a("span",{attrs:{class:"token function"}},[t._v("validInput")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String name"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Function"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" function"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" function"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("apply")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("其他类型：BiFunction、IntFunction、DoubleToIntFunction、DoubleToLongFunction、LongFunction、\nLongToDoubleFunction、LongToIntFunction、ToDoubleFunction、ToIntBiFunction、ToIntFunction、ToLongBiFunction、ToLongFunction")])]),t._v(" "),a("h2",{attrs:{id:"supplier系列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supplier系列","aria-hidden":"true"}},[t._v("#")]),t._v(" Supplier系列")]),t._v(" "),a("ul",[a("li",[t._v("Supplier接口没有入参，返回一个T类型的对象，类似工厂方法")]),t._v(" "),a("li",[t._v("使用方式：")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    Supplier"),a("span",{attrs:{class:"token generics function"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("User"),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" supplier "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("User")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    User user "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" supplier"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("BooleanSupplier、DoubleSupplier、IntSupplier、LongSupplier")])]),t._v(" "),a("h2",{attrs:{id:"其他方法理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他方法理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他方法理解")]),t._v(" "),a("ul",[a("li",[t._v("compose：先执行参数(即也是一个Function)的，再执行调用者(同样是一个Function)")]),t._v(" "),a("li",[t._v("andThen: 先执行调用者，再执行参数，和compose相反")])])])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);