(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{232:function(e,r,n){"use strict";n.r(r);var t=n(0),a=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reference","aria-hidden":"true"}},[e._v("#")]),e._v(" reference")]),e._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#reference的4种状态"}},[e._v("Reference的4种状态")])]),n("li",[n("a",{attrs:{href:"#reference中的构造函数"}},[e._v("Reference中的构造函数")])]),n("li",[n("a",{attrs:{href:"#weakreference的意义"}},[e._v("WeakReference的意义")])])])]),n("p"),e._v(" "),n("h2",{attrs:{id:"reference的4种状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reference的4种状态","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference的4种状态")]),e._v(" "),n("ul",[n("li",[e._v("Active：初始创建，开始分配内存的状态；")]),e._v(" "),n("li",[e._v("Pending：\n"),n("ul",[n("li",[e._v("ReferenceHandler 驻守线程变更的状态；")]),e._v(" "),n("li",[e._v("只有注册了队列的对象(构造的时候传了队列对象参数，即ReferenceQueue<? super T> queue;)才能变更")]),e._v(" "),n("li",[e._v("将在ReferenceQueue的enqueue 中变更为Enqueued")])])]),e._v(" "),n("li",[e._v("Enqueued：\n"),n("ul",[n("li",[e._v("对象的内存将要被回收，但未回收；")]),e._v(" "),n("li",[e._v("放在队列中，方便查询；")])])]),e._v(" "),n("li",[e._v("Inactive：终态，说明对象已经不存在。")])]),e._v(" "),n("h2",{attrs:{id:"reference中的构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reference中的构造函数","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference中的构造函数")]),e._v(" "),n("ul",[n("li",[e._v("Reference(T referent) 与Reference(T referent, ReferenceQueue<? super T> queue)区别\n"),n("ul",[n("li",[e._v("若传值ReferenceQueue，则对象的状态经历：Active->Pending->Enqueued->Inactive")]),e._v(" "),n("li",[e._v("不传值，则对象的状态经历：Active->Inactive")])])]),e._v(" "),n("li",[e._v("具体实现过程\n"),n("ul",[n("li",[e._v("ReferenceHandler 优先级最高的驻守线程，根据参数值判断是否进入队列;")]),e._v(" "),n("li",[e._v("discovered 值为Pending变更前的状态，表示对象即将要被回收；")])])])]),e._v(" "),n("h2",{attrs:{id:"weakreference的意义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#weakreference的意义","aria-hidden":"true"}},[e._v("#")]),e._v(" WeakReference的意义")]),e._v(" "),n("ul",[n("li",[e._v("标示对象为弱引用，当有潜在的内存泄漏分险时，将有驻守线程将其标记为可回收的对象；")]),e._v(" "),n("li",[e._v("GC垃圾回收机制会根据状态，回收弱引用对象；")])])])}],!1,null,null,null);a.options.__file="README.md";r.default=a.exports}}]);