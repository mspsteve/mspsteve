(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{180:function(t,e,r){"use strict";r.r(e);var s=r(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p"),t._m(1),r("p"),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("更新完数据库，是更新缓存呢，还是删除缓存。又或者是先删除缓存，再更新数据库。更新和删除的先后顺序都会带来某个时间间隙的脏数据，本文旨在提供一个工程上最优解决方案。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),r("p",[t._v("设置缓存过期时间，所有的写操作以数据库为准，对缓存操作只是尽最大努力即可，是保证最终一致性的解决方案。\n数据库写成功，缓存更新失败，只要到达过期时间，后续的读请求会从数据库中读取新值更新缓存。")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),r("p",[t._v("理论上，合理的缓存失效时间可以有效避免脏数据发生，但是缓存失效时间不容易控制，要考虑到读写时间差以及主从数据库同步等等因素，\n同时还要避免设置时间过短导致频繁查询数据的情况。")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&mid=404308725&idx=1&sn=1a25ce76dd1956014ceb8a011855268e&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("58沈剑"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzU5NjY2MzEyMA==&mid=2247483656&idx=1&sn=5668a4d9dd1fe0e028e4c1d4bcf5d427&chksm=fe5e0f37c92986218653450cd60fc88a65f29acda51c13b84602fc421786bb549f858e56aee0&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("程序员孤独烟"),r("OutboundLink")],1)])])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"缓存与db一致性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存与db一致性","aria-hidden":"true"}},[this._v("#")]),this._v(" 缓存与db一致性")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#前言"}},[t._v("前言")])]),r("li",[r("a",{attrs:{href:"#理论方案和实现目标"}},[t._v("理论方案和实现目标")])]),r("li",[r("a",{attrs:{href:"#目前实现策略"}},[t._v("目前实现策略")]),r("ul",[r("li",[r("a",{attrs:{href:"#先更新数据库，再更新缓存"}},[t._v("先更新数据库，再更新缓存")])]),r("li",[r("a",{attrs:{href:"#先删缓存，再更新数据库"}},[t._v("先删缓存，再更新数据库")])]),r("li",[r("a",{attrs:{href:"#先更新数据库，再删缓存"}},[t._v("先更新数据库，再删缓存")])])])]),r("li",[r("a",{attrs:{href:"#解决方案"}},[t._v("解决方案")]),r("ul",[r("li",[r("a",{attrs:{href:"#设置缓存失效时间"}},[t._v("设置缓存失效时间")])]),r("li",[r("a",{attrs:{href:"#延时双删策略"}},[t._v("延时双删策略")])])])]),r("li",[r("a",{attrs:{href:"#参考文献"}},[t._v("参考文献")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("本文重点")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("讲解缓存更新策略")]),this._v(" "),e("li",[this._v("对每种策略进行缺点分析")]),this._v(" "),e("li",[this._v("针对缺点给出改进方案")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"理论方案和实现目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理论方案和实现目标","aria-hidden":"true"}},[this._v("#")]),this._v(" 理论方案和实现目标")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"目前实现策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目前实现策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 目前实现策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"先更新数据库，再更新缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先更新数据库，再更新缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 先更新数据库，再更新缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("请求A和请求B同时进行更新操作，那么会出现"),e("br"),this._v("\n（1）线程A更新了数据库"),e("br"),this._v("\n（2）线程B更新了数据库"),e("br"),this._v("\n（3）线程B更新了缓存"),e("br"),this._v("\n（4）线程A更新了缓存"),e("br"),this._v("\n正常情况下,(4)应该比(3)早，但是由于网络的原因，B比A早更新缓存，导致出现脏数据，导致数据变更出现不可控因素，因此实际工作上不予考虑。\n此外，对于写较多的情况下，频繁地更新缓存也导致性能下降。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"先删缓存，再更新数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先删缓存，再更新数据库","aria-hidden":"true"}},[this._v("#")]),this._v(" 先删缓存，再更新数据库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("请求A进行更新操作，请求B进行查询操作。那么会出现如下情形:"),e("br"),this._v("\n（1）请求A进行写操作时，首先删除缓存"),e("br"),this._v("\n（2）请求B查询发现缓存不存在"),e("br"),this._v("\n（3）请求B去数据库查询得到旧值"),e("br"),this._v("\n（4）请求B将旧值写入缓存"),e("br"),this._v("\n（5）请求A将新值写入数据库"),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"先更新数据库，再删缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先更新数据库，再删缓存","aria-hidden":"true"}},[this._v("#")]),this._v(" 先更新数据库，再删缓存")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("假设两个请求，一个请求A做查询操作，一个请求B做更新操作，那么会有如下情形："),e("br"),this._v("\n（1）缓存刚好失效"),e("br"),this._v("\n（2）请求A查询数据库，得一个旧值"),e("br"),this._v("\n（3）请求B将新值写入数据库"),e("br"),this._v("\n（4）请求B删除缓存"),e("br"),this._v("\n（5）请求A将查到的旧值写入缓存"),e("br"),this._v("\n如果发生上述情况，确实是会发生脏数据。一般情况下，读取比写入要快很多，上述情况很难发生，极端情况下发生。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方案","aria-hidden":"true"}},[this._v("#")]),this._v(" 解决方案")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"设置缓存失效时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置缓存失效时间","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置缓存失效时间")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"延时双删策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延时双删策略","aria-hidden":"true"}},[this._v("#")]),this._v(" 延时双删策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("首先删除缓存，延迟一段时间再删除缓存,最终清楚掉脏数据，具体"),e("strong",[this._v("实现方案")]),this._v("如下：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("方案1：将删除失败的redis key放入到消息队列中，利用消息队列做重试。保证删除功能顺利实现，缺点代码侵入。"),e("br"),this._v("\n方案2: 使用canal订阅binlog日志，取出操作的数据和key，实现方案1重试功能。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考文献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文献","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考文献")])}],!1,null,null,null);i.options.__file="cache缓存一致性.md";e.default=i.exports}}]);